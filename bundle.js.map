{"version":3,"file":"bundle.js","mappings":"yBAAO,SAASA,EAAUC,GAAmD,IAAzBC,EAAyB,uDAAjB,GAAIC,EAAa,uDAAJ,GACnEC,EAAQC,MAAMC,KAAK,CAAEC,OAAQL,IAASM,KACxC,kBAAMH,MAAMC,KAAK,CAAEC,OAAQJ,IAAUM,KAAK,MAEtCC,EAAc,SAACC,GACnB,oBAAcA,EACXH,KAAI,WACH,qBAEDI,KAAK,IAJR,UAMIC,EAAQ,UAAH,OAAaT,EAAMI,IAAIE,GAAaE,KAAK,IAAzC,YAGXX,EAAYa,UAAYD,EACxB,IAAIE,EAAUd,EAAYe,iBAAiB,MAC3CD,EAAQE,SAAQ,SAACC,EAAIC,GACnBD,EAAGE,iBAAiB,SAAS,WAC3BF,EAAGG,UAAUC,OAAO,e,87BCb1B,IAAMJ,EAAyBK,SAASC,cAAc,SAElDN,GCLG,SAA0BA,GAC/B,IASIO,EATErB,EAAQc,EAAGM,cAAc,kBACzBE,EAAaR,EAAGM,cAAc,sBAC9BG,EAAaT,EAAGM,cAAc,sBAC9BI,EAAcV,EAAGM,cACrB,uBAEIK,EAAMX,EAAGM,cAAc,cACvBM,EAAUZ,EAAGM,cAAc,aAC7BO,GAAgB,EAqBpB,SAASC,IACPD,GAAgB,EAChBE,cAAcR,GACdI,EAAIf,UAAY,QAElB,SAASoB,IACPH,GAAgB,EAChBF,EAAIf,UAAY,OAChBW,EAAQU,aAAY,WAEC,OADFZ,SAASC,cAAc,UAEtCQ,IC3CD,WAWL,IAVA,IAAII,EAAW/B,MAAMC,KAEnBiB,SAASC,cAAc,SAASa,MAChC,SAAC1B,GAAD,OAASN,MAAMC,KAAKK,EAAI2B,UAEtBC,EAAyD,CAC3DC,SAAU,GACVC,WAAY,IAGLtB,EAAI,EAAGA,EAAIiB,EAAS7B,OAAQY,GAAK,EAExC,IAAK,IAAIuB,EAAI,EAAGA,EAAIN,EAASjB,GAAGZ,OAAQmC,GAAK,EAAG,CAG9C,IADA,IAAIC,EAAY,EACPC,EAASzB,EAAI,EAAGyB,GAAUzB,EAAI,EAAGyB,GAAU,EAClD,IAAK,IAAIP,EAAOK,EAAI,EAAGL,GAAQK,EAAI,EAAGL,GAAQ,EACxCQ,EAAcD,EAAQP,KACxBM,GAAa,GAID,IAAdA,EACFJ,EAASC,SAASM,KAAlB,UAA0B3B,EAA1B,YAA+BuB,IAE/BH,EAASE,WAAWK,KAApB,UAA4B3B,EAA5B,YAAiCuB,IAavC,SAASG,EAAc1B,EAAWuB,GAChC,OAAIA,KAAKN,GAAYjB,KAAKiB,EAASM,IAC1BN,EAASjB,GAAGuB,GAAGrB,UAAU0B,SAAS,SAX7CR,EAASC,SAASvB,SAAQ,SAAC+B,EAAS7B,GAClC,QAAa6B,EAAQC,MAAM,KAA3B,GAAKC,EAAL,KAAQC,EAAR,KACAf,GAAUc,IAAIC,GAAG9B,UAAU+B,IAAI,YAEjCb,EAASE,WAAWxB,SAAQ,SAAC+B,GAC3B,QAAaA,EAAQC,MAAM,KAA3B,GAAKC,EAAL,KAAQC,EAAR,KACAf,GAAUc,IAAIC,GAAG9B,UAAUgC,OAAO,YDQzBC,KACqB,IAA3B5B,EAAW6B,eAhChBzB,EAAQV,iBAAiB,SAAS,WAChCpB,EAAUI,GAAQuB,EAAW6B,OAAS,IAAK5B,EAAY4B,OAAS,IAChExB,OAGFhC,EAAUI,GACVyB,EAAIT,iBAAiB,SAAS,WACP,GAAjBW,EACFG,IAEAF,OAIJN,EAAWN,iBAAiB,SAAS,WACnCa,cAAcR,GACdS,ODpBFuB,CADiCvC,G","sources":["webpack://webpack-2/./src/drawField.ts","webpack://webpack-2/./src/index.ts","webpack://webpack-2/./src/createGameOfLife.ts","webpack://webpack-2/./src/startLife.ts"],"sourcesContent":["export function drawField(htmlElement: HTMLElement, width = 20, haight = 20) {\n  let field = Array.from({ length: width }).map(\n    () => Array.from({ length: haight }).fill(0) as number[]\n  );\n  const rowIterator = (row: number[]) => {\n    return `<tr>${row\n      .map(() => {\n        return `<td></td>`;\n      })\n      .join(\"\")}</tr>`;\n  };\n  const table = `<table>${field.map(rowIterator).join(\"\")}</table>`;\n\n  // eslint-disable-next-line no-param-reassign\n  htmlElement.innerHTML = table;\n  let tableEl = htmlElement.querySelectorAll(\"td\") as NodeListOf<Element>;\n  tableEl.forEach((el, i) => {\n    el.addEventListener(\"click\", () => {\n      el.classList.toggle(\"activ\");\n    });\n  });\n}\n","import \"./style/style.css\";\nimport { createGameOfLife } from \"./createGameOfLife\";\n// - для проверки своего кода можно создать еще один элемент и создать вторую игру на этой же странице\n// const gameWrapper1 = document.createElement(\"div\");\n// document.body.appendChild(gameWrapper1);\nconst el: HTMLElement | null = document.querySelector(\".game\");\n\nif (el) {\n  const gameWrapper: HTMLElement = el;\n  createGameOfLife(gameWrapper);\n}\n","import { drawField } from \"./drawField\";\nimport { startLife } from \"./startLife\";\nexport function createGameOfLife(el: HTMLElement) {\n  const field = el.querySelector(\".game__wrapper\") as HTMLElement;\n  const inputRange = el.querySelector(\".game__input-range\") as HTMLInputElement;\n  const inputWidth = el.querySelector(\".game__input-width\") as HTMLInputElement;\n  const inputHaight = el.querySelector(\n    \".game__input-height\"\n  ) as HTMLInputElement;\n  const btn = el.querySelector(\".game__btn\") as HTMLElement;\n  const btnForm = el.querySelector(\".form-btn\") as HTMLElement;\n  let gameIsRunning = false;\n  let timer: ReturnType<typeof setTimeout>;\n  btnForm.addEventListener(\"click\", () => {\n    drawField(field, +inputWidth.value || 20, +inputHaight.value || 20);\n    stopGame();\n  });\n\n  drawField(field);\n  btn.addEventListener(\"click\", () => {\n    if (gameIsRunning == false) {\n      startGame();\n    } else {\n      stopGame();\n    }\n  });\n\n  inputRange.addEventListener(\"input\", () => {\n    clearInterval(timer);\n    startGame();\n  });\n\n  function stopGame() {\n    gameIsRunning = false;\n    clearInterval(timer);\n    btn.innerHTML = \"Start\";\n  }\n  function startGame() {\n    gameIsRunning = true;\n    btn.innerHTML = \"Stop\";\n    timer = setInterval(() => {\n      let activeСell = document.querySelector(\".activ\");\n      if (activeСell === null) {\n        stopGame();\n      } else startLife();\n    }, inputRange.valueAsNumber * 100);\n  }\n}\n","export function startLife(): void {\n  let arrField = Array.from(\n    // @ts-ignore\n    document.querySelector(\"table\").rows,\n    (row) => Array.from(row.cells) as HTMLTableCellElement[]\n  );\n  let nextStep: { arrActiv: string[]; arrUNactiv: string[] } = {\n    arrActiv: [],\n    arrUNactiv: [],\n  };\n\n  for (let i = 0; i < arrField.length; i += 1) {\n    //rows\n    for (let j = 0; j < arrField[i].length; j += 1) {\n      //column\n      let neighbors = 0;\n      for (let column = i - 1; column <= i + 1; column += 1) {\n        for (let rows = j - 1; rows <= j + 1; rows += 1) {\n          if (findNeighbors(column, rows)) {\n            neighbors += 1;\n          }\n        }\n      }\n      if (neighbors === 3) {\n        nextStep.arrActiv.push(`${i}:${j}`);\n      } else {\n        nextStep.arrUNactiv.push(`${i}:${j}`);\n      }\n    }\n  }\n  nextStep.arrActiv.forEach((element, i) => {\n    let [x, y] = element.split(\":\");\n    arrField[+x][+y].classList.add(\"activ\");\n  });\n  nextStep.arrUNactiv.forEach((element) => {\n    let [x, y] = element.split(\":\");\n    arrField[+x][+y].classList.remove(\"activ\");\n  });\n\n  function findNeighbors(i: number, j: number) {\n    if (j in arrField && i in arrField[j]) {\n      return arrField[i][j].classList.contains(\"activ\");\n    } else {\n      return false;\n    }\n  }\n}\n"],"names":["drawField","htmlElement","width","haight","field","Array","from","length","map","fill","rowIterator","row","join","table","innerHTML","tableEl","querySelectorAll","forEach","el","i","addEventListener","classList","toggle","document","querySelector","timer","inputRange","inputWidth","inputHaight","btn","btnForm","gameIsRunning","stopGame","clearInterval","startGame","setInterval","arrField","rows","cells","nextStep","arrActiv","arrUNactiv","j","neighbors","column","findNeighbors","push","contains","element","split","x","y","add","remove","startLife","valueAsNumber","value","createGameOfLife"],"sourceRoot":""}